######################################################################
#  Tmux configuration sources:                                       #
#                                                                    #
#  - https://gist.github.com/snuggs/800936                           #
#  - https://github.com/tony/tmux-config                             #
#  - http://endot.org/2011/12/06/my-tmux-configuration/              #
#  - https://mutelight.org/practical-tmux                            #
#  - https://github.com/ThomasAdam/tmux                              #
#  - https://github.com/include/dotfiles/blob/master/tmux.conf       #
######################################################################

# ^ is an interesting key for a prefix
set-option -g prefix ^
unbind-key C-b
bind-key C-a last-window
bind-key ^ last-window
# send prefix to nested sessions
bind-key a send-prefix

# we might need ^ at some point, allow switching
# we can also send the prefix char with ^-a
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix ^

#  0 is too far from ^ ;)
set -g base-index 1

set-option -g default-terminal "xterm-256color"
set-option -g status-keys vi
set-option -g bell-action any
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # active (or not), window number,program name
set-option -g visual-bell on

# utf8 support
#set-window-option -g utf8 on
#set-option -g status-utf8 on

setw -g mode-keys vi
setw -g monitor-activity on

# Window handling
bind -n C-space new-window
bind -n S-up new-window
bind -n S-down kill-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1
bind-key c kill-pane
bind-key C kill-window
bind-key q confirm-before kill-session
bind-key Q confirm-before kill-server

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Pane handling
bind-key Space list-panes
bind-key Enter break-pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Window splitting
bind | split-window -h
bind - split-window -v

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set-option -g status-justify left
set-option -g status-bg black
set-option -g status-fg white
set-option -g status-left-length 40
set-option -g status-interval 10

set-option -g pane-active-border-fg cyan
set-option -g pane-active-border-bg black
set-option -g pane-border-fg white
set-option -g pane-border-bg black

set-option -g message-fg black
set-option -g message-bg green

setw -g window-status-bg black
setw -g window-status-current-fg green
#setw -g window-status-alert-attr default
#setw -g window-status-alert-fg yellow

set -g status-left '#[fg=red]#h#[fg=green]:#[fg=white]#S #[fg=green]| #[fg=cyan]#(cat /proc/loadavg | cut -d" " -f1-3) #[fg=green]|#[default]'

# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
set -g status-right '#[fg=green]| #[fg=cyan]%m-%d #[fg=white]%H:%M#[default]'

# `r reloads the configuration, handy
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# adapted from https://gist.github.com/spikegrobstein/5724689
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Look good
set-option -g default-terminal "screen-256color"

# scrollback buffer size increase (this eats up memory, sometimes)
set -g history-limit 500000

# Start tab numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# use different keys to split vertical and horizonal
# ^B | for vertical split
# ^B - for horizontal split
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change cursor in vim to distinguish between insert and command mode
# Use in conjunction with tmux-cursors.vim
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

# use C-b v to paste the tmux buffer
bind v paste-buffer
setw -g mode-keys vi
bind Escape copy-mode
unbind p
bind p paste-buffer

#bind-key -T copy-mode-vi 'v' send -X begin-selection # Begin selection in copy mode.
#bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle # Begin selection in copy mode.
#bind-key -T copy-mode-vi 'y' send -X copy-selection # Yank selection in copy mode.

# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
run-shell "echo $TMUX_VERSION"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# bind-key syntax changed in 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   rectangle-toggle \
   bind-key -t vi-copy y   copy-selection"

bind-key -T copy-mode-vi v   send -X begin-selection
bind-key -T copy-mode-vi V   send -X rectangle-toggle
bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'

# Disable copy-mode on click + drag
unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane



# Enable mouse support (works in iTerm)
#set-option -g -q mouse on

# make mousewheel work when not in copy mode
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M
#bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
#bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
#bind-key -t copy-mode WheelUpPane halfpage-up
#bind-key -t copy-mode WheelDownPane halfpage-down

# renumber windows (if you have gaps in numbering, this renumbers them sequentially
# ^B r
bind R movew -r

# split the screen into a main screen and an 80-width pane on the right
bind -n C-g split-window -h -c "#{pane_current_path}" \; resize-pane -x 80 \; select-pane -t 0

# split the screen into main screen with 16-tall pane on the bottom
bind g split-window -v -c "#{pane_current_path}"\; resize-pane -y 16 \; select-pane -t 0

# ^B \ : resize the currently selected pane to be 80 columns
bind '?' resize-pane -x 80

# ^B ] : resize the currently selected pane to 16 rows high
bind ']' resize-pane -y 16

# This helps copy-selecting a split-window configuration by
# zooming into the current pane (leave with ^-shift-+)
unbind +
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.1 \;\
  select-window -t tmux-zoom

unbind *
bind * \
  last-window \;\
  swap-pane -s tmux-zoom.1 \;\
  kill-window -t tmux-zoom

# Tmux Plugin Manager https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'

run '~/.extra/tmux/plugins/tpm/tpm'
